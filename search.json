[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Project",
    "section": "",
    "text": "As an individual or in a team pick a topic and\n\ncreate a (cleanish) dataset\nchoose an appropriate analysis\ninterpret results\npublish your analysis and findings\nCreate a video highlighting your work\n\nMore information will be coming as we get closer to the start of the project work."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Stat 471: Analysis of Messy Data",
    "section": "",
    "text": "Course Materials\nDates shown are due dates (for assignments and exams) and dates on which material was presented (for slides).\n\n\n\n\n\n\nModule 0: Setting up the work environment\n\n\n\n\n\n\n\n   \n    \n    \n      Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\n\nTitle\n\n\n\nType\n\n\n\n \n\n\n\n\n\n\n\n\nAug 26, 2025\n\n\nAbout Stat 471\n\n\nslides\n\n\n\n\n\n\n\n\n\nAug 26, 2025\n\n\nR, RStudio, git\n\n\nslides\n\n\n\n\n\n\n\n\n\nAug 28, 2025\n\n\nHomework 0 Setup A: Git and Github\n\n\nHomework\n\n\n\n\n\n\n\n\n\nSep 2, 2025\n\n\nHomework 0 Setup B: Connecting RStudio and Git\n\n\nHomework\n\n\n\n\n\n\n\n\n\nSep 4, 2025\n\n\nHomework 1: Reproducibility\n\n\nHomework\n\n\n\n\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\n\n\nModule 1: Tidy forms of data\n\n\n\n\n\n\n\n   \n    \n    \n      Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\n\nTitle\n\n\n\nType\n\n\n\n \n\n\n\n\n\n\n\n\nAug 26, 2025\n\n\nWhat is “Messy Data”?\n\n\nslides\n\n\n\n\n\n\n\n\n\nSep 2, 2025\n\n\nMake it Tidy Data!\n\n\nslides\n\n\n\n\n\n\n\n\n\nSep 2, 2025\n\n\nNormal Forms of data\n\n\nslides\n\n\n\n\n\n\n\n\n\nSep 4, 2025\n\n\nWorking through code: data summaries\n\n\ncode\n\n\n\n\n\n\n\n\n\nSep 4, 2025\n\n\nHomework 1: Reproducibility\n\n\nHomework\n\n\n\n\n\n\n\n\n\nSep 9, 2025\n\n\nHomework: chi-square and large data\n\n\nslides\n\n\n\n\n\n\n\n\n\nSep 9, 2025\n\n\nNormalizing Data\n\n\nslides\n\n\n\n\n\n\n\n\n\nSep 9, 2025\n\n\nYour Turn code for normalizing data\n\n\ncode\n\n\n\n\n\n\n\n\n\nSep 9, 2025\n\n\nResolution Strategies\n\n\nslides\n\n\n\n\n\n\n\n\n\nSep 11, 2025\n\n\nHomework 2: Cleaning the weather\n\n\nHomework\n\n\n\n\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\n\n\nModule 2: Data Cleaning\n\n\n\n\n\n\n\n   \n    \n    \n      Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\n\nTitle\n\n\n\nType\n\n\n\n \n\n\n\n\n\n\n\n\nSep 11, 2025\n\n\nData Formats\n\n\nslides\n\n\n\n\n\n\n\n\n\nSep 11, 2025\n\n\nHomework 2: Cleaning the weather\n\n\nHomework\n\n\n\n\n\n\n\n\n\nSep 16, 2025\n\n\nReviewing Normalizing for 2nd Normal Form\n\n\ncode\n\n\n\n\n\n\n\n\n\nSep 18, 2025\n\n\nData Validation\n\n\nslides\n\n\n\n\n\n\n\n\n\nSep 18, 2025\n\n\nCode for Your Turn - Data Rules\n\n\ncode\n\n\n\n\n\n\n\n\n\nSep 18, 2025\n\n\nHomework 3: Cleaning the weather … more\n\n\nHomework\n\n\n\n\n\n\n\n\n\nSep 23, 2025\n\n\nUnivariate Outliers\n\n\nslides\n\n\n\n\n\n\n\n\n\nSep 23, 2025\n\n\nMultivariate Outlier Detection\n\n\nslides\n\n\n\n\n\n\n\n\n\nSep 25, 2025\n\n\nHomework 4: Flights across the US\n\n\nHomework\n\n\n\n\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\n\n\nModule 3: Working with Missing Values\n\n\n\n\n\n\n\n   \n    \n    \n      Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\n\nTitle\n\n\n\nType\n\n\n\n \n\n\n\n\n\n\n\n\nOct 2, 2025\n\n\nWorking with Missing Values - Overview\n\n\nslides\n\n\n\n\n\n\n\n\n\nOct 7, 2025\n\n\nImputing Missing Values\n\n\nslides\n\n\n\n\n\n\n\n\n\nOct 9, 2025\n\n\nHomework 5: Outlier Tests\n\n\nHomework\n\n\n\n\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\n\n\nModule 4: Record Linkage: joining data from different sources\n\n\n\n\n\n\n\n    \n      \n      \n    \n\n\n\n\nDate\nTitle\nType\n\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\n\n\nModule 5: Working with large data\n\n\n\n\n\n\n\n    \n      \n      \n    \n\n\n\n\nDate\nTitle\nType\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/03b-yourturn-code.html",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/03b-yourturn-code.html",
    "title": "Your Turn code for normalizing data",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nstudent_courses &lt;- data.frame(\n  student_id = c(101, 101, 102, 102, 103, 103),\n  course_id = c(\"CS101\", \"MATH201\", \"CS101\", \"PHYS101\", \"MATH201\", \"CS101\"),\n  semester = c(\"Fall2023\", \"Fall2023\", \"Fall2023\", \"Fall2023\", \"Fall2023\", \"Fall2023\"),\n  instructor_name = c(\"Dr. Smith\", \"Dr. Johnson\", \"Dr. Smith\",   \"Dr. Johnson\", \"Dr. Brown\", \"Dr. Smith\"),\n  grade = c(\"A\", \"B+\", \"B\", \"A-\", \"A\", \"B+\")\n)\n\n# We don't have duplicates:\n!any(duplicated(student_courses))\n\n[1] TRUE\n\nstudent_courses |&gt; count(student_id, course_id) |&gt; filter(n &gt; 1)\n\n[1] student_id course_id  n         \n&lt;0 rows&gt; (or 0-length row.names)\n\nstudent_courses |&gt; count(student_id) |&gt; filter(n &gt; 1)\n\n  student_id n\n1        101 2\n2        102 2\n3        103 2\n\nstudent_courses |&gt; count(course_id) |&gt; filter(n &gt; 1)\n\n  course_id n\n1     CS101 3\n2   MATH201 2\n\n# yes, data set is in 1st normal form\n\ncourses &lt;- student_courses |&gt; group_by(course_id) |&gt;\n  summarize(\n    semester = unique(semester),\n    instructor_name = paste(unique(instructor_name), collapse=\", \")\n  )\n\n!any(duplicated(courses$course_id))\n\n[1] TRUE"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/hwk-1-reproducibility.html",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/hwk-1-reproducibility.html",
    "title": "Homework 1: Reproducibility",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom.\n\n\nAn example in reproducibility\n\n\nThis repository contains the Nebraskan subset from the 2023 Behavioral Risk Factor Surveillance System (BRFSS). The BRFSS is run annually by the Center for Disease control and prevention (CDC).\nYou can load the data with\nbrfss &lt;- readRDS(\"brfssNE2023.rds\")\nThe dataset contains 12886 observations on 350 variables.\nThe codebook for the full data is available from https://www.cdc.gov/brfss/annual_data/annual_2023.html. A copy of the site is included in the repo in the file USCODE23_LLCP_021924.HTML.\nVariables names starting with X_ in the R data are listed in the codebook without the starting X, i.e. the variable X_AGEG5YR can be found as _AGEG5YR in the codebook.\n\n\nTodo\n\nClone this repository to your local machine and open RStudio using the file reproducibility-brfss.Rproj.\nCreate a quarto document index.qmd. This is the file in which you should include all of your work.\nUse the brfss data described above to find an age distribution of all Nebraskans who participated in the BRFSS survey. Use the variable X_AGEG5YR and show the distribution in a barchart and a table. Make sure to address in a paragraph how you deal with non responses.\n\nIs the age of Nebraskans distributed significantly different from the nationally reported age distribution? (You could run a Chi-square test of homogeneity using chisq.test) Make sure to interpret the results.\nRe-do the analysis in questions 2 and 3 by considering the survey weights X_LLCPWT. Again, interpret the results. How do you explain the differences?\n\n\n\nSubmission\n\nMake sure that your file index.qmd contains all the details needed for me to re-run your analysis.\nEnsure that the file renders without an error.\n\nAdd your file index.qmd to the repository, commit and push."
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/02-normal-forms.html#biological-experiment",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/02-normal-forms.html#biological-experiment",
    "title": "Normal Forms of data",
    "section": "Biological experiment",
    "text": "Biological experiment\nIn a study, RNA-seq expressions of 11k different genes are measured at 6 and 12 hours after seeds from two different gene lines have germinated.\nWhat is the key?"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/02-normal-forms.html#weather-station",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/02-normal-forms.html#weather-station",
    "title": "Normal Forms of data",
    "section": "Weather station",
    "text": "Weather station\nA weather station publishes monthly averages for the minimum and maximum temperature during each hour of the day.\nWhat is the key?"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/02-normal-forms.html#tuberculosis",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/02-normal-forms.html#tuberculosis",
    "title": "Normal Forms of data",
    "section": "Tuberculosis",
    "text": "Tuberculosis\nThe World Health Organization track the number of new incidences of tuberculosis by sex and age group in each country.\nWhat is the key?"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/02-normal-forms.html#french-fries",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/02-normal-forms.html#french-fries",
    "title": "Normal Forms of data",
    "section": "French Fries",
    "text": "French Fries\nIn a 10 week sensory experiment, 12 individuals assess taste of french fries on several scales (how potato-y, buttery, grassy, rancid, paint-y do they taste?), fried in one of 3 different oils, replicated twice.\nWhat is the key?"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/01-what-is-messy.html#cryptic-names",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/01-what-is-messy.html#cryptic-names",
    "title": "What is “Messy Data”?",
    "section": "Cryptic Names",
    "text": "Cryptic Names\nWhat are the variables? What are the observations?\n\n\n# A tibble: 6 × 4\n  Inst                     AvNumPubs AvNumCits PctCompletion\n  &lt;chr&gt;                        &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n1 ARIZONA STATE UNIVERSITY      0.9       1.57          31.7\n2 AUBURN UNIVERSITY             0.79      0.64          44.4\n3 BOSTON COLLEGE                0.51      1.03          46.8\n4 BOSTON UNIVERSITY             0.49      2.66          34.2\n5 BRANDEIS UNIVERSITY           0.3       3.03          48.7\n6 BROWN UNIVERSITY              0.84      2.31          54.6"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/01-what-is-messy.html#more-cryptic",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/01-what-is-messy.html#more-cryptic",
    "title": "What is “Messy Data”?",
    "section": "More cryptic",
    "text": "More cryptic\nWhat’s in the column names of this data? What are the experimental units? What are the measured variables?\n\n\n# A tibble: 3 × 12\n  id     `WI-6.R1` `WI-6.R2` `WI-6.R4` `WM-6.R1` `WM-6.R2` `WI-12.R1` `WI-12.R2`\n  &lt;chr&gt;      &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n1 Gene 1      2.18     2.20       4.20     2.63       5.06       4.54       5.53\n2 Gene 2      1.46     0.585      1.86     0.515      2.88       1.36       2.96\n3 Gene 3      2.03     0.870      3.28     0.533      4.63       2.18       5.56\n# ℹ 4 more variables: `WI-12.R4` &lt;dbl&gt;, `WM-12.R1` &lt;dbl&gt;, `WM-12.R2` &lt;dbl&gt;,\n#   `WM-12.R4` &lt;dbl&gt;\n\n\n\nthe experimental design is coded into the variable names, genotype:WI/WM, time:6/12, rep:1/2/4"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/01-what-is-messy.html#most",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/01-what-is-messy.html#most",
    "title": "What is “Messy Data”?",
    "section": "Most",
    "text": "Most\nWhat are the variables? What are the records?\n\n\n           V1   V2 V3   V4  V5  V9 V13 V17 V21 V25 V29 V33 V37 V41 V45 V49 V53\n1 ASN00086282 1970  7 TMAX 141 124 113 123 148 149 139 153 123 108 119 112 126\n2 ASN00086282 1970  7 TMIN  80  63  36  57  69  47  84  78  49  42  48  56  51\n3 ASN00086282 1970  7 PRCP   3  30   0   0  36   3   0   0  10  23   3   0   5\n4 ASN00086282 1970  8 TMAX 145 128 150 122 109 112 116 142 166 127 117 127 159\n5 ASN00086282 1970  8 TMIN  50  61  75  67  41  51  48  -7  56  62  47  33  67\n6 ASN00086282 1970  8 PRCP   0  66   0  53  13   3   8   0   0   0   3   5   0\n  V57 V61 V65 V69 V73 V77 V81 V85 V89 V93 V97\n1 112 115 133 134 126 104 143 141 134 117 142\n2  36  44  39  40  58  15  33  51  74  39  66\n3   0   0   0   0   0   8   0  18   0   0   0\n4 143 114  65 113 125 129 147 161 168 178 161\n5  84  11  41  18  50  22  28  74  94  73  88\n6   0  64   3  99  36   8   0   0   0   8  36\n\n\n\nvariables are TMAX, TMIN, PRCP, year, month, day, stationid.\nEach row contains the values for one month!"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/01-what-is-messy.html#too_much_info",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/01-what-is-messy.html#too_much_info",
    "title": "What is “Messy Data”?",
    "section": "Too_much_info",
    "text": "Too_much_info\nWhat are the variables? What are the experimental units?\n\n\n# A tibble: 6 × 22\n  iso2   year  m_04 m_514 m_014 m_1524 m_2534 m_3544 m_4554 m_5564  m_65   m_u\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 ZW     2003    NA    NA   133    874   3048   2228    981    367   205    NA\n2 ZW     2004    NA    NA   187    833   2908   2298   1056    366   198    NA\n3 ZW     2005    NA    NA   210    837   2264   1855    762    295   656    NA\n4 ZW     2006    NA    NA   215    736   2391   1939    896    348   199    NA\n5 ZW     2007     6   132   138    500   3693      0    716    292   153    NA\n6 ZW     2008    NA    NA   127    614      0   3316    704    263   185     0\n# ℹ 10 more variables: f_04 &lt;dbl&gt;, f_514 &lt;dbl&gt;, f_014 &lt;dbl&gt;, f_1524 &lt;dbl&gt;,\n#   f_2534 &lt;dbl&gt;, f_3544 &lt;dbl&gt;, f_4554 &lt;dbl&gt;, f_5564 &lt;dbl&gt;, f_65 &lt;dbl&gt;,\n#   f_u &lt;dbl&gt;"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/01-what-is-messy.html#tables",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/01-what-is-messy.html#tables",
    "title": "What is “Messy Data”?",
    "section": "Tables",
    "text": "Tables\nWhat are the variables? What are the observations?\n\n\n            religion &lt;$10k $10-20k $20-30k $30-40k\n1           Agnostic    27      34      60      81\n2            Atheist    12      27      37      52\n3           Buddhist    27      21      30      34\n4           Catholic   418     617     732     670\n5 Don’t know/refused    15      14      15      11"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/01-what-is-messy.html#gross-on-repeat",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/01-what-is-messy.html#gross-on-repeat",
    "title": "What is “Messy Data”?",
    "section": "Gross on repeat",
    "text": "Gross on repeat\n10 week sensory experiment, 12 individuals assessed taste of french fries on several scales (how potato-y, buttery, grassy, rancid, paint-y do they taste?), fried in one of 3 different oils, replicated twice.\nFirst few rows:\n\n\n# A tibble: 4 × 9\n  time  treatment subject   rep potato buttery grassy rancid painty\n  &lt;fct&gt; &lt;fct&gt;     &lt;fct&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 1     1         3           1    2.9     0      0      0      5.5\n2 1     1         3           2   14       0      0      1.1    0  \n3 1     1         10          1   11       6.4    0      0      0  \n4 1     1         10          2    9.9     5.9    2.9    2.2    0  \n\n\nWhat is the experimental unit? What are the factors of the experiment? What was measured? What do you want to know?"
  },
  {
    "objectID": "materials-2025/Module 0 - Setting up/03-hwk-rstudio-git.html",
    "href": "materials-2025/Module 0 - Setting up/03-hwk-rstudio-git.html",
    "title": "Homework 0 Setup B: Connecting RStudio and Git",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom.\n\n\nConnecting-RStudio-and-Git-Github\n\nClone this repository to your local machine\nOpen RStudio using the project file Connecting-RStudio-and-Git-Github.Rproj\nOpen the file README.Rmd\nMake sure that the following code chunks run successfully\n\n\nLoad Packages …\nVersions\n\n\nRun the code chunk 'versions' at least once successfully.\n\nConnection to git\n\n\nRun the code chunk 'gitconnection' at least once successfully.\n\nCreate the README.md file by rendering the README.Rmd file\nCheck the resulting README.md file:\n\nis your version of R (relatively) current? (most current: 4.5.1)\nis your RStudio version from this year?\nis your version of git (relatively) current? (most current: 2.51.0)\n\nIf any of your answers above is ‘no’ install a newer version.\n\nDo you have push and pull access to the Git repository?\n\nIf not, make sure that you have followed all of the steps laid out in chapter 12 of Jenny Bryan’s “Happy Git and GitHub for the useR”\nCommit and push all changed files to Github classroom.\nYour done!"
  },
  {
    "objectID": "materials-2025/Module 0 - Setting up/hwk-1-reproducibility.html",
    "href": "materials-2025/Module 0 - Setting up/hwk-1-reproducibility.html",
    "title": "Homework 1: Reproducibility",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom.\n\n\nAn example in reproducibility\n\n\nThis repository contains the Nebraskan subset from the 2023 Behavioral Risk Factor Surveillance System (BRFSS). The BRFSS is run annually by the Center for Disease control and prevention (CDC).\nYou can load the data with\nbrfss &lt;- readRDS(\"brfssNE2023.rds\")\nThe dataset contains 12886 observations on 350 variables.\nThe codebook for the full data is available from https://www.cdc.gov/brfss/annual_data/annual_2023.html. A copy of the site is included in the repo in the file USCODE23_LLCP_021924.HTML.\nVariables names starting with X_ in the R data are listed in the codebook without the starting X, i.e. the variable X_AGEG5YR can be found as _AGEG5YR in the codebook.\n\n\nTodo\n\nClone this repository to your local machine and open RStudio using the file reproducibility-brfss.Rproj.\nCreate a quarto document index.qmd. This is the file in which you should include all of your work.\nUse the brfss data described above to find an age distribution of all Nebraskans who participated in the BRFSS survey. Use the variable X_AGEG5YR and show the distribution in a barchart and a table. Make sure to address in a paragraph how you deal with non responses.\n\nIs the age of Nebraskans distributed significantly different from the nationally reported age distribution? (You could run a Chi-square test of homogeneity using chisq.test) Make sure to interpret the results.\nRe-do the analysis in questions 2 and 3 by considering the survey weights X_LLCPWT. Again, interpret the results. How do you explain the differences?\n\n\n\nSubmission\n\nMake sure that your file index.qmd contains all the details needed for me to re-run your analysis.\nEnsure that the file renders without an error.\n\nAdd your file index.qmd to the repository, commit and push."
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/hwk-2-clean-weather.html",
    "href": "materials-2025/Module 2 - Data cleaning/hwk-2-clean-weather.html",
    "title": "Homework 2: Cleaning the weather",
    "section": "",
    "text": "Note: This assignment must be accepted in Canvas and submitted in github classroom."
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/hwk-2-clean-weather.html#submission",
    "href": "materials-2025/Module 2 - Data cleaning/hwk-2-clean-weather.html#submission",
    "title": "Homework 2: Cleaning the weather",
    "section": "Submission",
    "text": "Submission\nMake sure that your file index.qmd includes all details to make your answers fully reproducible. Ensure that the file renders properly. Add all relevant(!) files to the repository, commit, and push!"
  },
  {
    "objectID": "gasbuddy.html",
    "href": "gasbuddy.html",
    "title": "Stat 471",
    "section": "",
    "text": "authorization: apikey 4mEsIM76saqF28IR638bWr:6XJHqxtklK7pw7haSU8wy9\nlibrary(httr2)\n\n# Set up base request with API key\ngas_request &lt;- request(\"https://api.collectapi.com/gasPrice\") |&gt;\n  req_headers(\"X-API-KEY\" = \"apikey 4mEsIM76saqF28IR638bWr:6XJHqxtklK7pw7haSU8wy9\")\n\n# Get gas prices for a specific country\nget_gas_prices &lt;- function(country = \"united-states\") {\n  gas_request |&gt;\n    req_url_path_append(\"fromCity\") |&gt;\n    req_url_query(country = country) |&gt;\n    req_perform() |&gt;\n    resp_body_json()\n}\n\n# Get all available countries\nget_countries &lt;- function() {\n  gas_request |&gt;\n    req_url_path_append(\"countries\") |&gt;\n    req_perform() |&gt;\n    resp_body_json()\n}\n\n# Usage examples\ncountries &lt;- get_countries()\nus_prices &lt;- get_gas_prices(\"united-states\")\nuk_prices &lt;- get_gas_prices(\"united-kingdom\")\nReplace \"YOUR_API_KEY_HERE\" with your actual CollectAPI key from their dashboard."
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/hwk3-us-flights.html",
    "href": "materials-2025/Module 2 - Data cleaning/hwk3-us-flights.html",
    "title": "Homework 3: Flights across the US",
    "section": "",
    "text": "Note: This assignment must be accepted in Canvas and submitted in github classroom."
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/hwk3-us-flights.html#prepping",
    "href": "materials-2025/Module 2 - Data cleaning/hwk3-us-flights.html#prepping",
    "title": "Homework 3: Flights across the US",
    "section": "Prepping",
    "text": "Prepping\n\nAccept the assignment in Canvas, follow the link to create a repository, and clone this repository to your local machine.\nCreate a file named index.qmd and add it to the repository. This is the file that should contain your code, results, and interpretations. Make sure to include enough detail that your work is fully reproducible."
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/hwk3-us-flights.html#to-do-items",
    "href": "materials-2025/Module 2 - Data cleaning/hwk3-us-flights.html#to-do-items",
    "title": "Homework 3: Flights across the US",
    "section": "To Do Items",
    "text": "To Do Items\n\nImport flights for all three months into a single object flights. Report on the number of flights by months and the number of features reported for it.\nDetermine a key for the data set. Make sure to show that it fulfills the requirements of a key.\nGive three different examples of transitive dependencies in the data.\nAirport information is included for both Origin and Dest. Create a new data set called airports in which you include the information once, then remove all but the required airport information from the flights object.\nCreate a summary for the number of flights each day and plot it. Color the points by day of the week. Make sure to provide labels for the days of the week. Describe the general pattern for the number of flights you see. Which days do not follow this pattern?\nThe variable Cancelled contains information about whether a flight was cancelled. Why can we not assume that flight cancellations occur completely randomly? Identify at least two factors contributing to non-random flight cancellations and visualize your findings."
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/hwk3-us-flights.html#submission",
    "href": "materials-2025/Module 2 - Data cleaning/hwk3-us-flights.html#submission",
    "title": "Homework 3: Flights across the US",
    "section": "Submission",
    "text": "Submission\nEnsure that the file index.qmd renders without errors. Read through the rendered document to check for consistency. Remove excessive printouts. Add all relevant(!) files to the repository, commit, and push!"
  },
  {
    "objectID": "materials-2025/Module 0 - Setting up/02-hwk-git-github.html",
    "href": "materials-2025/Module 0 - Setting up/02-hwk-git-github.html",
    "title": "Homework 0 Setup A: Git and Github",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "materials-2025/Module 0 - Setting up/02-hwk-git-github.html#todo-items",
    "href": "materials-2025/Module 0 - Setting up/02-hwk-git-github.html#todo-items",
    "title": "Homework 0 Setup A: Git and Github",
    "section": "📝 Todo Items",
    "text": "📝 Todo Items\n\nClone this repository to your local machine\nOn your local machine, create a new markdown file in this repository named ‘About_Me.md’.\nIn the file ‘About_Me.md’ include either a or b:\n\n\na short biography/introduction for yourself and use markdown formatting - Markdown Basics provides an overview of different formatting options in markdown. - You must use at least the following formatting elements: header, subheader, bold or italic, bulleted list, and an image.\nprovide a link to your portfolio (hosted on github) that includes all of the above items.\n\n\nCommit your changes to your new file locally and push them back to your github repository. Check on Github to make sure the new file appears."
  },
  {
    "objectID": "materials-2025/Module 0 - Setting up/02-hwk-git-github.html#resources",
    "href": "materials-2025/Module 0 - Setting up/02-hwk-git-github.html#resources",
    "title": "Homework 0 Setup A: Git and Github",
    "section": "📚 Resources",
    "text": "📚 Resources\n\nA short video explaining what GitHub is\nGit and GitHub learning resources\nUnderstanding the GitHub flow\nInteractive Git training materials\nGitHub’s Learning Lab\nEducation community forum\nGitHub community forum"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/02b-workday.html",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/02b-workday.html",
    "title": "Working through code: data summaries",
    "section": "",
    "text": "#\n# What is the average grade in each subject?\n#\n#   How many courses does each student take?\n#\n#   How many students are enrolled in total?\n\nstudents &lt;- data.frame(\n  student_name = c(\"Alice\", \"Alice\", \"Bob\", \"Bob\", \"Alice\", \"Alice\"),\n  course = c(\"Math\", \"Science\", \"Math\", \"Science\", \"Math\", \"Science\"),\n  grade = c(85, 92, 78, 88, 82, 90),\n  student_id = rep(1:3, each = 2)\n)\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4          ✔ readr     2.1.5     \n✔ forcats   1.0.0          ✔ stringr   1.5.1     \n✔ ggplot2   3.5.2.9002     ✔ tibble    3.3.0     \n✔ lubridate 1.9.4          ✔ tidyr     1.3.1     \n✔ purrr     1.1.0          \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nduplicated(students |&gt; select(student_id, course))\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE\n\nstudents |&gt; group_by(course) |&gt;\n  summarise(\n    grade = mean(grade, na.rm=TRUE),\n    n = n(),\n    non_missing_grade = sum(is.na(grade))\n  )\n\n# A tibble: 2 × 4\n  course  grade     n non_missing_grade\n  &lt;chr&gt;   &lt;dbl&gt; &lt;int&gt;             &lt;int&gt;\n1 Math     81.7     3                 0\n2 Science  90       3                 0\n\nstudents |&gt; group_by(student_id) |&gt;\n  summarise(\n    num_courses = length(unique(course)),\n    n = n(),\n  ) |&gt; ungroup()\n\n# A tibble: 3 × 3\n  student_id num_courses     n\n       &lt;int&gt;       &lt;int&gt; &lt;int&gt;\n1          1           2     2\n2          2           2     2\n3          3           2     2\n\nstudents |&gt; summarize(\n  num_enrolled = length(unique(student_id))\n)\n\n  num_enrolled\n1            3\n\nstudents |&gt; count(student_id) |&gt; nrow()\n\n[1] 3"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/hwk-2-clean-weather.html",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/hwk-2-clean-weather.html",
    "title": "Homework 2: Cleaning the weather",
    "section": "",
    "text": "Note: This assignment must be accepted in Canvas and submitted in github classroom."
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/hwk-2-clean-weather.html#submission",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/hwk-2-clean-weather.html#submission",
    "title": "Homework 2: Cleaning the weather",
    "section": "Submission",
    "text": "Submission\nMake sure that your file index.qmd includes all details to make your answers fully reproducible. Ensure that the file renders properly. Add all relevant(!) files to the repository, commit, and push!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Stat 471 - Analysis of Messy Data",
    "section": "",
    "text": "Fall 2025\nTR 3:30 - 4:45 pm, Canvas\nOffice Hours: by appointment\nInstructor: Heike Hofmann, hhofmann4 at unl dot edu\n\n\n\nCourse description\n\nAnalysis of complex, real-world data sets. Analysis techniques will vary depending on interest and availability of data sets.\n\nNot all data lives in nice, clean spreadsheets, not all data fits in a computer’s main memory. As statisticians we cannot always rely on other people and sciences to get the data into formats that we can deal with: we will discuss aspects of statistical computing as they are relevant for data analysis. Elements of literate programming help us with making our workflow transparent and analyses reproducible. We will discuss communication of results in form of web sites and interactive web applications.\n\n\nLearn how to …\n\ncompute with data to check the quality,\nimpute missing values, wrangle data formats, and join data sources.\nwrite efficient and reproducible code so others are able to replicate the analysis.\npull data together to solve a contemporary problem.\nuse LLM bots to assess their helpfulness in different situations\npublish reports on the web\n\n\n\nMore Info …\nThe course organization on GitHub: https://github.com/stat471-at-UNL/stat471-at-UNL.github.io\nRepo that creates this website: https://github.com/stat471-at-UNL/materials-2025"
  },
  {
    "objectID": "materials-2025/checking-for-split-key.html",
    "href": "materials-2025/checking-for-split-key.html",
    "title": "Untitled",
    "section": "",
    "text": "library(dplyr)\n\n# Find duplicate keys and their counts\ndf %&gt;% \n  count(key1, key2) %&gt;% \n  filter(n &gt; 1)\n\n# Check if any duplicates exist\ndf %&gt;% \n  add_count(key1, key2) %&gt;% \n  summarise(has_split_key = any(n &gt; 1))"
  },
  {
    "objectID": "materials-2025/checking-for-split-key.html#using-dplyr-for-analysis",
    "href": "materials-2025/checking-for-split-key.html#using-dplyr-for-analysis",
    "title": "Untitled",
    "section": "",
    "text": "library(dplyr)\n\n# Find duplicate keys and their counts\ndf %&gt;% \n  count(key1, key2) %&gt;% \n  filter(n &gt; 1)\n\n# Check if any duplicates exist\ndf %&gt;% \n  add_count(key1, key2) %&gt;% \n  summarise(has_split_key = any(n &gt; 1))"
  },
  {
    "objectID": "materials-2025/checking-for-split-key.html#comprehensive-function",
    "href": "materials-2025/checking-for-split-key.html#comprehensive-function",
    "title": "Untitled",
    "section": "4. Comprehensive Function",
    "text": "4. Comprehensive Function\ncheck_split_key &lt;- function(df, key_cols) {\n  if (any(duplicated(df[, key_cols, drop = FALSE]))) {\n    dupes &lt;- df[duplicated(df[, key_cols, drop = FALSE]) | \n               duplicated(df[, key_cols, drop = FALSE], fromLast = TRUE), ]\n    list(has_split_key = TRUE, duplicate_rows = dupes)\n  } else {\n    list(has_split_key = FALSE, duplicate_rows = NULL)\n  }\n}\n\n# Usage\nresult &lt;- check_split_key(df, c(\"id\", \"date\"))"
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/hwk4-us-flights.html",
    "href": "materials-2025/Module 2 - Data cleaning/hwk4-us-flights.html",
    "title": "Homework 4: Flights across the US",
    "section": "",
    "text": "Note: This assignment must be accepted in Canvas and submitted in github classroom."
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/hwk4-us-flights.html#prepping",
    "href": "materials-2025/Module 2 - Data cleaning/hwk4-us-flights.html#prepping",
    "title": "Homework 4: Flights across the US",
    "section": "Prepping",
    "text": "Prepping\n\nAccept the assignment in Canvas, follow the link to create a repository, and clone this repository to your local machine.\nCreate a file named index.qmd and add it to the repository. This is the file that should contain your code, results, and interpretations. Make sure to include enough detail that your work is fully reproducible."
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/hwk4-us-flights.html#to-do-items",
    "href": "materials-2025/Module 2 - Data cleaning/hwk4-us-flights.html#to-do-items",
    "title": "Homework 4: Flights across the US",
    "section": "To Do Items",
    "text": "To Do Items\n\nImport flights for all three months into a single object flights. Report on the number of flights by months and the number of features reported for it.\nDetermine a key for the data set. Make sure to show that it fulfills the requirements of a key.\nGive three different examples of transitive dependencies in the data.\nAirport information is included for both Origin and Dest. Create a new data set called airports in which you include the information once, then remove all but the required airport information from the flights object.\nCreate a summary for the number of flights each day and plot it. Color the points by day of the week. Make sure to provide labels for the days of the week. Describe the general pattern for the number of flights you see. Which days do not follow this pattern?\nThe variable Cancelled contains information about whether a flight was cancelled. Why can we not assume that flight cancellations occur completely randomly? Identify at least two factors contributing to non-random flight cancellations and visualize your findings."
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/hwk4-us-flights.html#submission",
    "href": "materials-2025/Module 2 - Data cleaning/hwk4-us-flights.html#submission",
    "title": "Homework 4: Flights across the US",
    "section": "Submission",
    "text": "Submission\nEnsure that the file index.qmd renders without errors. Read through the rendered document to check for consistency. Remove excessive printouts. Add all relevant(!) files to the repository, commit, and push!"
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/hwk-3-cleaner-weather.html",
    "href": "materials-2025/Module 2 - Data cleaning/hwk-3-cleaner-weather.html",
    "title": "Homework 3: Cleaning the weather … more",
    "section": "",
    "text": "Note: This assignment must be accepted in Canvas and submitted in github classroom."
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/hwk-3-cleaner-weather.html#submission",
    "href": "materials-2025/Module 2 - Data cleaning/hwk-3-cleaner-weather.html#submission",
    "title": "Homework 3: Cleaning the weather … more",
    "section": "Submission",
    "text": "Submission\nMake sure that your file index.qmd includes all details to make your answers fully reproducible. Ensure that the file renders properly. Add all relevant(!) files to the repository, commit, and push!"
  },
  {
    "objectID": "materials-2025/Module 1 - Tidy Forms of Data/03-normalizing-data.html",
    "href": "materials-2025/Module 1 - Tidy Forms of Data/03-normalizing-data.html",
    "title": "Normalizing Data",
    "section": "",
    "text": "Why do we care about normal forms?\nNormal forms help (force?) us to\n\nlook for formal structure in datasets\nthink about functions/purpose of variables\n\nNormalizing is a formal way of checking data quality\n\n\nNormalization strategies\n\nCheck whether there are (and how many) duplicate rows in the data\nIdentify or create a key\nNormalize from 1st to 2nd NF\nNormalize from 2nd to 3rd NF\n\n\n\nDuplicate rows\n\n# Check uniqueness\n!any(duplicated(&lt;data set&gt;))\n\nIf there are duplicates, there is either no key or some rows were accidentally duplicated - count what proportion of lines is duplicated\n\n# What is the ratio of duplicated rows?\ntable(duplicated(&lt;data set&gt;))\n\n\n\nIdentify candidate keys\n\nKeys have to uniquely identify a row\n\nIf variables cand1, cand2 are a key candidate, the following line will result in zero output:\n\n# Check for unique combinations\n&lt;data set&gt; %&gt;% \n  count(cand1, cand2) %&gt;% \n  filter(n &gt; 1)\n\n\n\nYour Turn\nConsider the following data set capturing University records for student exam scores:\n\nstudent_courses &lt;- data.frame(\n  student_id = c(101, 101, 102, 102, 103, 103),\n  course_id = c(\"CS101\", \"MATH201\", \"CS101\", \"PHYS101\", \"MATH201\", \"CS101\"),\n  semester = c(\"Fall2023\", \"Fall2023\", \"Fall2023\", \"Fall2023\", \"Fall2023\", \"Fall2023\"),\n  instructor_name = c(\"Dr. Smith\", \"Dr. Johnson\", \"Dr. Smith\", \"Dr. Johnson\", \"Dr. Brown\", \"Dr. Smith\"),\n  grade = c(\"A\", \"B+\", \"B\", \"A-\", \"A\", \"B+\")\n)\n\n\nIs this dataset in 1st normal form?\nIs this dataset in 2nd normal form?\n\n\n\nChecking for a split key\n\n\nNormalizing from 1st to 2nd NF\n\nFixing a split key requires to split the data\nThe set of non-key variables depending on a part of the key need to be summarized. This process can reveal inconsistencies\n\n\nIdea: all variables depending on a part of the key should have the same repeated data. A group-wise summary of unique should only result in one value:\n\nnew_table &lt;- old_table |&gt; group_by(&lt;partial key&gt;) |&gt; summarize(\n  variable1 = unique(variable1),\n  variable2 = unique(variable2),\n  variable3 = unique(variable3)\n)\n\n\n\n\nNormalizing from 1st to 2nd NF\nIn case of errors (because of different lengths in unique), we can use paste\n\nnew_table &lt;- old_table |&gt; group_by(&lt;partial key&gt;) |&gt; summarize(\n  variable1 = unique(variable1),\n  variable2 = unique(variable2),\n  variable3 = unique(variable3)\n)\n\n\n\nNormalizing from 1st to 2nd NF\nIn case of errors (because of different lengths in unique), we can use paste\n\nnew_table &lt;- old_table |&gt; group_by(&lt;partial key&gt;) |&gt; summarize(\n  variable1 = paste(unique(variable1), collapse = \", \"),\n  variable2 = unique(variable2),\n  variable3 = unique(variable3)\n)\n\n\n\nYour Turn\nBring the student_courses dataset into 2nd normal form:\n\nstudent_courses &lt;- data.frame(\n  student_id = c(101, 101, 102, 102, 103, 103),\n  course_id = c(\"CS101\", \"MATH201\", \"CS101\", \"PHYS101\", \"MATH201\", \"CS101\"),\n  semester = c(\"Fall2023\", \"Fall2023\", \"Fall2023\", \"Fall2023\", \"Fall2023\", \"Fall2023\"),\n  instructor_name = c(\"Dr. Smith\", \"Dr. Johnson\", \"Dr. Smith\", \"Dr. Johnson\", \"Dr. Brown\", \"Dr. Smith\"),\n  grade = c(\"A\", \"B+\", \"B\", \"A-\", \"A\", \"B+\")\n)\n\n\n\nHow much normalization?\nRule of thumb: Normalize to eliminate anomalies, denormalize for performance. Find the sweet spot for your use case."
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/01b-code.html",
    "href": "materials-2025/Module 2 - Data cleaning/01b-code.html",
    "title": "Reviewing Normalizing for 2nd Normal Form",
    "section": "",
    "text": "property &lt;- readxl::read_xlsx(\"../data/state/NIBRS_Table_28_Crimes_Against_Property_Offenses_Offense_Category_by_State_2024.xlsx\",\n                              skip=4)\n\nNew names:\n• `` -&gt; `...6`\n• `` -&gt; `...7`\n• `` -&gt; `...8`\n• `` -&gt; `...9`\n• `` -&gt; `...10`\n• `` -&gt; `...11`\n• `` -&gt; `...12`\n• `` -&gt; `...13`\n• `` -&gt; `...14`\n• `` -&gt; `...15`\n• `` -&gt; `...16`\n\nproperty_names &lt;- readxl::read_xlsx(\"../data/state/NIBRS_Table_28_Crimes_Against_Property_Offenses_Offense_Category_by_State_2024.xlsx\",\n                              skip=5)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n• `` -&gt; `...3`\n• `` -&gt; `...4`\n\n#values_only &lt;- readxl::read_xlsx(\"../data/state/NIBRS_Table_28_Crimes_Against_Property_Offenses_Offense_Category_by_State_2024.xlsx\",\n#                                    skip=6)\n\nnames(property)[-(1:4)] &lt;- names(property_names)[-(1:4)]\nnames(property)\n\n [1] \"State\"                                  \n [2] \"Number of \\r\\nParticipating\\r\\nAgencies\"\n [3] \"Population\\r\\nCovered\"                  \n [4] \"Total \\r\\nOffenses\"                     \n [5] \"Arson\"                                  \n [6] \"Bribery\"                                \n [7] \"Burglary/\\r\\nBreaking &\\r\\nEntering\"    \n [8] \"Counterfeiting/\\r\\nForgery\"             \n [9] \"Destruction/\\r\\nDamage/\\r\\nVandalism\"   \n[10] \"Embezzlement\"                           \n[11] \"Extortion/\\r\\nBlackmail\"                \n[12] \"Fraud \\r\\nOffenses\"                     \n[13] \"Larceny/\\r\\nTheft\\r\\nOffenses\"          \n[14] \"Motor\\r\\nVehicle\\r\\nTheft\"              \n[15] \"Robbery\"                                \n[16] \"Stolen \\r\\nProperty \\r\\nOffenses\"       \n\nproperty &lt;- janitor::clean_names(property)\n\n\nlibrary(rvest)\nurl &lt;- \"https://www.the-numbers.com/box-office-chart/weekend/2025/09/05\"\ndoc &lt;- read_html(url)\ntables &lt;- doc |&gt; html_table()\ntables[[2]]\n\n# A tibble: 70 × 11\n   ``    ``    `Movie Title`     Distributor Gross `%LW` Theaters TheatersChange\n   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;             &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;         \n 1 1     N     The Conjuring: L… Warner Bro… $84,… \"\"    3,802    \"\"            \n 2 2     N     Hamilton          Walt Disney $10,… \"\"    1,825    \"\"            \n 3 3     (1)   Weapons           Warner Bro… $5,2… \"-50… 3,284    \"-132\"        \n 4 4     (4)   Freakier Friday   Walt Disney $3,8… \"-43… 3,125    \"-350\"        \n 5 5     (3)   Caught Stealing   Sony Pictu… $3,1… \"-59… 3,578    \"n/c\"         \n 6 6     (6)   The Fantastic Fo… Walt Disney $2,8… \"-43… 2,385    \"-400\"        \n 7 7     (5)   The Roses         Searchligh… $2,7… \"-56… 2,700    \"n/c\"         \n 8 8     (7)   The Bad Guys 2    Universal   $2,5… \"-47… 2,602    \"-422\"        \n 9 9     N     Light of the Wor… Salvation … $2,4… \"\"    2,075    \"\"            \n10 10    (8)   Superman          Warner Bro… $972… \"-62… 1,187    \"-637\"        \n# ℹ 60 more rows\n# ℹ 3 more variables: PerTheater &lt;chr&gt;, TotalGross &lt;chr&gt;,\n#   `Weekends InRelease` &lt;chr&gt;\n\nproperty &lt;- property |&gt; dplyr::slice(-1)\n\n\nsummary(property)\n\n    state           number_of_participating_agencies population_covered \n Length:52          Min.   :    2.0                  Min.   :   450712  \n Class :character   1st Qu.:  109.5                  1st Qu.:  1678399  \n Mode  :character   Median :  233.0                  Median :  4404134  \n                    Mean   :  561.6                  Mean   : 11404923  \n                    3rd Qu.:  403.2                  3rd Qu.:  7143264  \n                    Max.   :14601.0                  Max.   :296527998  \n total_offenses       arson             bribery         \n Min.   :   8934   Length:52          Length:52         \n 1st Qu.:  34589   Class :character   Class :character  \n Median : 118888   Mode  :character   Mode  :character  \n Mean   : 316845                                        \n 3rd Qu.: 232338                                        \n Max.   :8237977                                        \n burglary_breaking_entering counterfeiting_forgery destruction_damage_vandalism\n Length:52                  Length:52              Length:52                   \n Class :character           Class :character       Class :character            \n Mode  :character           Mode  :character       Mode  :character            \n                                                                               \n                                                                               \n                                                                               \n embezzlement       extortion_blackmail fraud_offenses    \n Length:52          Length:52           Length:52         \n Class :character   Class :character    Class :character  \n Mode  :character   Mode  :character    Mode  :character  \n                                                          \n                                                          \n                                                          \n larceny_theft_offenses motor_vehicle_theft   robbery         \n Length:52              Length:52           Length:52         \n Class :character       Class :character    Class :character  \n Mode  :character       Mode  :character    Mode  :character  \n                                                              \n                                                              \n                                                              \n stolen_property_offenses\n Length:52               \n Class :character        \n Mode  :character"
  },
  {
    "objectID": "materials-2025/Module 2 - Data cleaning/02b-code.html",
    "href": "materials-2025/Module 2 - Data cleaning/02b-code.html",
    "title": "Code for Your Turn - Data Rules",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4          ✔ readr     2.1.5     \n✔ forcats   1.0.0          ✔ stringr   1.5.1     \n✔ ggplot2   3.5.2.9002     ✔ tibble    3.3.0     \n✔ lubridate 1.9.4          ✔ tidyr     1.3.1     \n✔ purrr     1.1.0          \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(stat471)\ndata(brfss)\nsummary(brfss$HEIGHT3)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  305.0   504.0   507.0   874.3   511.0  9999.0     297 \n\nbrfss |&gt; ggplot(aes( x= HEIGHT3)) + geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n\n\nWarning: Removed 297 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\nemployees &lt;- data.frame(\n  id = c(1, 2, 3, 4),\n  age = c(25, -3, 45, 200),\n  gender = c(\"M\", \"F\", \"F\", \"X\"),\n  salary = c(50000, 60000, 70000, 999999),\n  start_date = ymd(c(\"2020-01-01\", \"2021-02-01\", \"2020-03-01\", \"2020-01-15\")),\n  end_date   = ymd(c(\"2020-12-31\", \"2020-03-01\", NA, NA))\n)\n\nlibrary(testdat)\n\nLoading required package: testthat\n\nAttaching package: 'testthat'\n\nThe following object is masked from 'package:dplyr':\n\n    matches\n\nThe following object is masked from 'package:purrr':\n\n    is_null\n\nThe following objects are masked from 'package:readr':\n\n    edition_get, local_edition\n\nThe following object is masked from 'package:tidyr':\n\n    matches\n\n\nAttaching package: 'testdat'\n\nThe following object is masked from 'package:testthat':\n\n    matches\n\nset_testdata(employees)\n\nexpect_unique(id)\n\nexpect_range(age, 0, 120)\n\nError: get_testdata() has 2 records failing range check on variable `age`.\nVariable set: `age`\nFilter: None\nArguments: `min = 0, max = 120`\n\nexpect_range(salary, 0, 500000)\n\nError: get_testdata() has 1 records failing range check on variable `salary`.\nVariable set: `salary`\nFilter: None\nArguments: `min = 0, max = 5e+05`\n\nexpect_cond(is.na(end_date), start_date &lt;= end_date)\n\nError: get_testdata() failed consistency check. 2 cases have `is.na(end_date)` but not `start_date &lt;= end_date`.\n\nexpect_cond(TRUE, start_date &lt;= end_date)\n\nError: get_testdata() failed consistency check. 3 cases have `TRUE` but not `start_date &lt;= end_date`.\n\nwith_testdata(data, code, quosure = TRUE)\n\nError: object 'code' not found"
  },
  {
    "objectID": "materials-2025/Module 3 - Missing Values/missing-values.html#how-do-we-fix-datasets-with-missing-values",
    "href": "materials-2025/Module 3 - Missing Values/missing-values.html#how-do-we-fix-datasets-with-missing-values",
    "title": "Working with Missing Values - Overview",
    "section": "How do we ‘fix’ datasets with missing values?",
    "text": "How do we ‘fix’ datasets with missing values?"
  },
  {
    "objectID": "materials-2025/Module 3 - Missing Values/hwk5-outlier-tests.html",
    "href": "materials-2025/Module 3 - Missing Values/hwk5-outlier-tests.html",
    "title": "Homework 5: Outlier Tests",
    "section": "",
    "text": "Note: This assignment must be accepted in Canvas and submitted in github classroom."
  },
  {
    "objectID": "materials-2025/Module 3 - Missing Values/hwk5-outlier-tests.html#references",
    "href": "materials-2025/Module 3 - Missing Values/hwk5-outlier-tests.html#references",
    "title": "Homework 5: Outlier Tests",
    "section": "References",
    "text": "References\nDixon, W.J. (1951). Ratios involving extreme values. Ann. Math. Stat. 22, 1, 68-78.\nGrubbs, F.E. (1950). Sample Criteria for testing outlying observations. Ann. Math. Stat. 21, 1, 27-58."
  },
  {
    "objectID": "materials-2025/Module 3 - Missing Values/hwk5-outlier-tests.html#submission",
    "href": "materials-2025/Module 3 - Missing Values/hwk5-outlier-tests.html#submission",
    "title": "Homework 5: Outlier Tests",
    "section": "Submission",
    "text": "Submission\nMake sure that your file index.qmd includes all details to make your answers fully reproducible. Ensure that the file renders properly. Add all relevant(!) files to the repository, commit, and push!"
  }
]